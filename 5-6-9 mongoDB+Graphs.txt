[{"id":"254759ef.51b2c6","type":"subflow","name":"Iterate","in":[{"x":220,"y":219,"wires":[{"id":"75e0156.9a9d9ec"}]}],"out":[{"x":454,"y":174,"wires":[{"id":"75e0156.9a9d9ec","port":0}]},{"x":455,"y":259,"wires":[{"id":"75e0156.9a9d9ec","port":1}]}]},{"id":"75e0156.9a9d9ec","type":"function","z":"254759ef.51b2c6","name":"Iterate","func":"//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];","outputs":"2","noerr":0,"x":347,"y":220,"wires":[[],[]]},{"id":"abcd271e.48e0b8","type":"iot-datasource","z":"6e89002.a6701","name":"weight","tstampField":"","dataField":"","disableDiscover":false,"x":770,"y":340,"wires":[[]]},{"id":"154885e1.5f419a","type":"function","z":"6e89002.a6701","name":"find.toArray","func":"msg.collection = 'localData';\nmsg.operation  = 'find.toArray';\nmsg.payload    = { 'chip' : \"c465178e0d84\" };\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":407,"wires":[["94057a7e.cd5c28"]]},{"id":"6f5e5772.661878","type":"inject","z":"6e89002.a6701","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":407,"wires":[["154885e1.5f419a"]]},{"id":"94057a7e.cd5c28","type":"mongodb2 in","z":"6e89002.a6701","service":"_ext_","configNode":"f22f493c.27d188","name":"admin","collection":"","operation":"","x":450,"y":407,"wires":[["38712277.8c26ee"]]},{"id":"38712277.8c26ee","type":"subflow:254759ef.51b2c6","z":"6e89002.a6701","name":"Iterate","env":[],"x":630,"y":407,"wires":[["bb044c94.ee602"],[]]},{"id":"bb044c94.ee602","type":"function","z":"6e89002.a6701","name":"","func":"var newMsg={};\nnewMsg.payload={\n    tstamp: Date.parse(msg.payload.date),\n    data: msg.payload.weight\n} \nreturn [newMsg,msg];\n","outputs":2,"noerr":0,"x":630,"y":347,"wires":[["abcd271e.48e0b8"],["38712277.8c26ee"]]},{"id":"f22f493c.27d188","type":"mongodb2","z":"","uri":"mongodb://localhost:27017/admin","name":"admin","options":"","parallelism":"-1"}]